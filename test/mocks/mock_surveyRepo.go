// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mock_surveyRepo is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	entities "survey/internal/entities"

	gomock "github.com/golang/mock/gomock"
	logrus "github.com/sirupsen/logrus"
)

// MockSurveyRepo is a mock of SurveyRepo interface.
type MockSurveyRepo struct {
	ctrl     *gomock.Controller
	recorder *MockSurveyRepoMockRecorder
}

// MockSurveyRepoMockRecorder is the mock recorder for MockSurveyRepo.
type MockSurveyRepoMockRecorder struct {
	mock *MockSurveyRepo
}

// NewMockSurveyRepo creates a new mock instance.
func NewMockSurveyRepo(ctrl *gomock.Controller) *MockSurveyRepo {
	mock := &MockSurveyRepo{ctrl: ctrl}
	mock.recorder = &MockSurveyRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSurveyRepo) EXPECT() *MockSurveyRepoMockRecorder {
	return m.recorder
}

// CreateSurvey mocks base method.
func (m *MockSurveyRepo) CreateSurvey(ctx context.Context, log logrus.FieldLogger, survey *entities.Survey) (*entities.Survey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSurvey", ctx, log, survey)
	ret0, _ := ret[0].(*entities.Survey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSurvey indicates an expected call of CreateSurvey.
func (mr *MockSurveyRepoMockRecorder) CreateSurvey(ctx, log, survey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSurvey", reflect.TypeOf((*MockSurveyRepo)(nil).CreateSurvey), ctx, log, survey)
}

// DeleteSurvey mocks base method.
func (m *MockSurveyRepo) DeleteSurvey(ctx context.Context, logger logrus.FieldLogger, surveyID uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSurvey", ctx, logger, surveyID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSurvey indicates an expected call of DeleteSurvey.
func (mr *MockSurveyRepoMockRecorder) DeleteSurvey(ctx, logger, surveyID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSurvey", reflect.TypeOf((*MockSurveyRepo)(nil).DeleteSurvey), ctx, logger, surveyID)
}

// GetResult mocks base method.
func (m *MockSurveyRepo) GetResult(ctx context.Context, logger logrus.FieldLogger, surveyID uint64) (*entities.Survey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResult", ctx, logger, surveyID)
	ret0, _ := ret[0].(*entities.Survey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResult indicates an expected call of GetResult.
func (mr *MockSurveyRepoMockRecorder) GetResult(ctx, logger, surveyID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResult", reflect.TypeOf((*MockSurveyRepo)(nil).GetResult), ctx, logger, surveyID)
}
